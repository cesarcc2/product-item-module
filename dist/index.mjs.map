{"version":3,"file":"index.mjs","sources":["../src/components/ProductItem.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\n\nexport interface ProductItemProps {\n  product: {\n    id: string;\n    name: string;\n    price: number;\n    quantity: number;\n  };\n  onSelect?: (id: string) => void;\n  onQuantityChange?: (id: string, quantity: number) => void;\n  isControlled?: boolean; // If true, parent controls state\n}\n\nexport const ProductItem: React.FC<ProductItemProps> = ({\n  product,\n  onSelect,\n  onQuantityChange,\n  isControlled = false,\n}) => {\n  const [quantity, setQuantity] = useState(product.quantity);\n\n  const handleSelect = () => {\n    if(!onSelect) {\n      return;\n    }\n    if (!isControlled) {\n      setQuantity(1); // Automatically set quantity to 1 when selected \n    }\n    onSelect(product.id);\n  };\n\n  const handleQuantityChange = (change: number) => {\n    const newQuantity = isControlled ? product.quantity + change : quantity + change;\n    if (newQuantity >= 0) {\n      if (!isControlled) setQuantity(newQuantity);\n      if (onQuantityChange) onQuantityChange(product.id, newQuantity);\n    }\n  };\n\n  const isSelected = isControlled ? product.quantity > 0 : quantity > 0;\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.name}>{product.name}</Text>\n      <Text>{`Price: $${product.price}`}</Text>\n      <View style={styles.actions}>\n        {!isSelected ? (\n          <Button title=\"Select\" onPress={handleSelect} />\n        ) : (\n          <View style={styles.quantityContainer}>\n            <Button title=\"-\" onPress={() => handleQuantityChange(-1)} />\n            <Text style={styles.quantity}>\n              {isControlled ? product.quantity : quantity}\n            </Text>\n            <Button title=\"+\" onPress={() => handleQuantityChange(1)} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { padding: 10, borderBottomWidth: 1 },\n  actions: { flexDirection: 'row', alignItems: 'center' },\n  name: { fontWeight: 'bold', marginBottom: 5 },\n  quantityContainer: { flexDirection: 'row', alignItems: 'center' },\n  quantity: { marginHorizontal: 10, fontSize: 16 },\n});"],"names":["ProductItem","_a","product","onSelect","onQuantityChange","_b","isControlled","_c","useState","quantity","setQuantity","handleQuantityChange","change","newQuantity","id","isSelected","_jsxs","View","style","styles","container","children","_jsx","Text","name","concat","price","actions","quantityContainer","Button","title","onPress","StyleSheet","create","padding","borderBottomWidth","flexDirection","alignItems","fontWeight","marginBottom","marginHorizontal","fontSize"],"mappings":"6JAeO,IAAMA,EAA0C,SAACC,GACtD,IAAAC,EAAOD,EAAAC,QACPC,EAAQF,EAAAE,SACRC,EAAgBH,EAAAG,iBAChBC,EAAoBJ,EAAAK,aAApBA,OAAY,IAAAD,GAAQA,EAEdE,EAA0BC,EAASN,EAAQO,UAA1CA,EAAQF,EAAA,GAAEG,OAYXC,EAAuB,SAACC,GAC5B,IAAMC,EAAcP,EAAeJ,EAAQO,SAAWG,EAASH,EAAWG,EACtEC,GAAe,IACZP,GAAcI,EAAYG,GAC3BT,GAAkBA,EAAiBF,EAAQY,GAAID,GAEtD,EAEKE,EAAaT,EAAeJ,EAAQO,SAAW,EAAIA,EAAW,EAEpE,OACEO,EAACC,EAAI,CAACC,MAAOC,EAAOC,UAASC,SAAA,CAC3BC,EAACC,GAAKL,MAAOC,EAAOK,KAAIH,SAAGnB,EAAQsB,OACnCF,EAACC,EAAM,CAAAF,SAAA,WAAAI,OAAWvB,EAAQwB,SAC1BJ,EAACL,EAAI,CAACC,MAAOC,EAAOQ,QACjBN,SAACN,EAGAC,EAACC,EAAK,CAAAC,MAAOC,EAAOS,kBAClBP,SAAA,CAAAC,EAACO,EAAO,CAAAC,MAAM,IAAIC,QAAS,WAAM,OAAApB,GAAsB,MACvDW,EAACC,EAAK,CAAAL,MAAOC,EAAOV,kBACjBH,EAAeJ,EAAQO,SAAWA,IAErCa,EAACO,EAAO,CAAAC,MAAM,IAAIC,QAAS,WAAM,OAAApB,EAAqB,EAAE,OAP1DW,EAACO,EAAO,CAAAC,MAAM,SAASC,QA1BV,WACf5B,IAGCG,GACHI,EAAY,GAEdP,EAASD,EAAQY,IAClB,QA+BH,EAEMK,EAASa,EAAWC,OAAO,CAC/Bb,UAAW,CAAEc,QAAS,GAAIC,kBAAmB,GAC7CR,QAAS,CAAES,cAAe,MAAOC,WAAY,UAC7Cb,KAAM,CAAEc,WAAY,OAAQC,aAAc,GAC1CX,kBAAmB,CAAEQ,cAAe,MAAOC,WAAY,UACvD5B,SAAU,CAAE+B,iBAAkB,GAAIC,SAAU"}