{"version":3,"file":"index.mjs","sources":["../src/components/ProductItem.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\n\nexport interface ProductItemProps {\n  product: {\n    id: string;\n    name: string;\n    price: number;\n    quantity: number;\n  };\n  onSelect?: (id: string) => void;\n  onQuantityChange?: (id: string, quantity: number) => void;\n  isControlled?: boolean; // If true, parent controls state\n}\n\nexport const ProductItem: React.FC<ProductItemProps> = ({\n  product,\n  onSelect,\n  onQuantityChange,\n  isControlled = false,\n}) => {\n  const [quantity, setQuantity] = useState(product.quantity);\n\n  const handleSelect = () => {\n    if (!isControlled && onSelect) {\n      setQuantity(1); // Automatically set quantity to 1 when selected\n      onSelect(product.id);\n      console.log(\"Product selected:\", product.name, product.quantity);\n    }\n  };\n\n  const handleQuantityChange = (change: number) => {\n    const newQuantity = quantity + change;\n    if (newQuantity >= 0) {\n      if (!isControlled) setQuantity(newQuantity);\n      if (onQuantityChange) onQuantityChange(product.id, newQuantity);\n    }\n  };\n\n  const isSelected = quantity > 0; // Determine if the product is selected\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.name}>{product.name}</Text>\n      <Text>{`Price: $${product.price}`}</Text>\n      <View style={styles.actions}>\n        {!isSelected ? (\n          <Button title=\"Select\" onPress={handleSelect} />\n        ) : (\n          <View style={styles.quantityContainer}>\n            <Button title=\"-\" onPress={() => handleQuantityChange(-1)} />\n            <Text style={styles.quantity}>{quantity}</Text>\n            <Button title=\"+\" onPress={() => handleQuantityChange(1)} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { padding: 10, borderBottomWidth: 1 },\n  actions: { flexDirection: 'row', alignItems: 'center' },\n  name: { fontWeight: 'bold', marginBottom: 5 },\n  quantityContainer: { flexDirection: 'row', alignItems: 'center' },\n  quantity: { marginHorizontal: 10, fontSize: 16 },\n});"],"names":["ProductItem","_a","product","onSelect","onQuantityChange","_b","isControlled","_c","useState","quantity","setQuantity","handleQuantityChange","change","newQuantity","id","isSelected","_jsxs","View","style","styles","container","children","_jsx","Text","name","concat","price","actions","quantityContainer","Button","title","onPress","console","log","StyleSheet","create","padding","borderBottomWidth","flexDirection","alignItems","fontWeight","marginBottom","marginHorizontal","fontSize"],"mappings":"6JAeO,IAAMA,EAA0C,SAACC,GACtD,IAAAC,EAAOD,EAAAC,QACPC,EAAQF,EAAAE,SACRC,EAAgBH,EAAAG,iBAChBC,EAAoBJ,EAAAK,aAApBA,OAAY,IAAAD,GAAQA,EAEdE,EAA0BC,EAASN,EAAQO,UAA1CA,EAAQF,EAAA,GAAEG,OAUXC,EAAuB,SAACC,GAC5B,IAAMC,EAAcJ,EAAWG,EAC3BC,GAAe,IACZP,GAAcI,EAAYG,GAC3BT,GAAkBA,EAAiBF,EAAQY,GAAID,GAEtD,EAEKE,EAAaN,EAAW,EAE9B,OACEO,EAACC,EAAI,CAACC,MAAOC,EAAOC,UAASC,SAAA,CAC3BC,EAACC,EAAK,CAAAL,MAAOC,EAAOK,KAAOH,SAAAnB,EAAQsB,OACnCF,EAACC,EAAM,CAAAF,SAAA,WAAAI,OAAWvB,EAAQwB,SAC1BJ,EAACL,EAAI,CAACC,MAAOC,EAAOQ,QAAON,SACvBN,EAGAC,EAACC,EAAI,CAACC,MAAOC,EAAOS,kBAAiBP,SAAA,CACnCC,EAACO,EAAO,CAAAC,MAAM,IAAIC,QAAS,WAAM,OAAApB,GAAsB,EAAtB,IACjCW,EAACC,EAAI,CAACL,MAAOC,EAAOV,SAAQY,SAAGZ,IAC/Ba,EAACO,EAAM,CAACC,MAAM,IAAIC,QAAS,WAAM,OAAApB,EAAqB,EAAE,OAL1DW,EAACO,EAAO,CAAAC,MAAM,SAASC,QAxBV,YACdzB,GAAgBH,IACnBO,EAAY,GACZP,EAASD,EAAQY,IACjBkB,QAAQC,IAAI,oBAAqB/B,EAAQsB,KAAMtB,EAAQO,UAE1D,QA6BH,EAEMU,EAASe,EAAWC,OAAO,CAC/Bf,UAAW,CAAEgB,QAAS,GAAIC,kBAAmB,GAC7CV,QAAS,CAAEW,cAAe,MAAOC,WAAY,UAC7Cf,KAAM,CAAEgB,WAAY,OAAQC,aAAc,GAC1Cb,kBAAmB,CAAEU,cAAe,MAAOC,WAAY,UACvD9B,SAAU,CAAEiC,iBAAkB,GAAIC,SAAU"}